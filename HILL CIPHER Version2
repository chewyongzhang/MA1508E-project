import numpy  as np
from numpy.linalg import *
import random
import json


W_to_N={'A':0,'B':1,'C':2,'D':3,'E':4,'F':5,'G':6,'H':7,'I':8,'J':9,'K':10,'L':11,'M':12,'N':13,'O':14,'P':15,'Q':16,'R':17,'S':18,'T':19,'U':20,'V':21,'W':22,'X':23,'Y':24,'Z':25}
N_to_W={0:'A',1:'B',2:'C',3:'D',4:'E',5:'F',6:'G',7:'H',8:'I',9:'J',10:'K',11:'L',12:'M',13:'N',14:'O',15:'P',16:'Q',17:'R',18:'S',19:'T',20:'U',21:'V',22:'W',23:'X',24:'Y',25:'Z'}
Key_Matrices = {}


def Det(m):
      d=det(m)
      return(d)

    
def KMatrix_Generator(n):
    det = 0
    while det == 0:
        y = 0
        while(y < 26):
            KEY_MATRIX = np.random.randint(20, size=(n,n))#Order = no_letters
            det = Det(KEY_MATRIX)
            res = (det * y) % 26
            if res == 1:
                #print(y)
                break
            else:
                y += 1
                if y == 26:
                    y = 0
            
    Key_Matrices[n] = KEY_MATRIX.tolist()
    return KEY_MATRIX
    
def Encrypt():
    
    Encryption_result=''    
    Text = input('What do you want to encrypt:')
    text = Text.split()
    file_name = input("how do you want to name your key matrix file:\n") #name the filename that user want to store their key matrices in
    
    for word in text:
        WORD=[]
        for letters in word:
            ROW_W = []
            letters = letters.upper()
            ROW_W.append(W_to_N[letters])
            WORD.append(ROW_W)

        WORD_MATRIX = np.array(WORD)
        
        if len(word) in Key_Matrices:#check if key matrix is already generated
            KEY_MATRIX = np.array(Key_Matrices[len(word)])
        else:
            KEY_MATRIX = KMatrix_Generator(len(word))

        Encryption_Matrix = np.dot(KEY_MATRIX, WORD_MATRIX) % 26
        
        for num in Encryption_Matrix:
            Divisor_E = int(num)//26
            Simplest_Num_E = int(num)-Divisor_E*26
            Encryption_result += N_to_W[Simplest_Num_E]
        Encryption_result += ' '

    with open(f"{file_name}.txt", 'w') as file: #Store matrices into txt file
        file.write(json.dumps(Key_Matrices))
    print('Your encrypted text is ' + '"' + Encryption_result + '"')

def Decrypt():
    Decryption_result=''
    if True:
            key_file=input("Please key in the name of the key file:\n")
            key_matrices = json.load(open(f'{key_file}.txt'))
            
            print(key_matrices)
            
            Encrypted_WORD = input('Please enter the words you want to decrypt:')
            text = Encrypted_WORD.split()
            for word in text:
                y = 0
                WORD = []
                word = word.upper()
                length = len(word)
                #print(key_matrices[f'{length}'])
                
                KEY_MATRIX = np.array(key_matrices[f'{length}'])
                DET = int(Det(KEY_MATRIX))
                while(y < 26):
                    res = int((DET * y) % 26)
                    if res == 1:
                        break
                    else:
                        y += 1
                        if y == 26:
                            y = 0
                    
                print ('y = ' + str(y))
                
                KEY_INV = inv(KEY_MATRIX)
                KEY_abs = det(KEY_MATRIX)
                K2 = np.around(KEY_INV * KEY_abs % 26)
                K2 = K2.astype(int)
                KEY_MATRIX_final = (y * K2) % 26
                
                for letters in word:
                    ROW_W = []
                    letters = letters.upper()
                    ROW_W.append(W_to_N[letters])
                    WORD.append(ROW_W)

                WORD_MATRIX = np.array(WORD)   #The matrix corresponding to the encrypted words
                
                Decryption_Matrix=np.dot(KEY_MATRIX_final, WORD_MATRIX)
                
                for num in Decryption_Matrix:
                    Divisor_D = int(num)//26
                    Simplest_Num_D = int(num)-Divisor_D*26
                    Decryption_result += N_to_W[Simplest_Num_D]         
                Decryption_result += ' '
    print('Your decrypted word is ' + '"' + Decryption_result + '"')

        
User_Input = input('If you want to encrypt the content, please enter Encrypt \nIf you want to decrypt the content, please enter Decrypt\n')
if User_Input == "Encrypt" :
    Encrypt()
elif User_Input == "Decrypt" :
    Decrypt()
else:
    print("Enter Encrypt() or Decrypt()")
